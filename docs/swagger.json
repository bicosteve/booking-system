{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Booking API to perform booking CRUD operations",
        "title": "Booking API",
        "contact": {
            "name": "Bico Oloo",
            "url": "https://github.com/bicosteve",
            "email": "bicosteve4@gmail.com"
        },
        "version": "1"
    },
    "basePath": "/api",
    "paths": {
        "/api/user/login": {
            "post": {
                "description": "**Receives user payload, validate it then send it to service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "Login User",
                "operationId": "login user",
                "responses": {
                    "200": {
                        "description": "Generate token",
                        "schema": {
                            "$ref": "#/definitions/controllers.APIResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/controllers.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/user/me": {
            "get": {
                "description": "**Receives user payload, validate it then send it to service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get a  User",
                "operationId": "user profile",
                "responses": {
                    "200": {
                        "description": "Returns user",
                        "schema": {
                            "$ref": "#/definitions/controllers.APIUserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.APIUserResponse"
                        }
                    }
                }
            }
        },
        "/api/user/password-reset": {
            "put": {
                "description": "**Receives user payload, validate it then send it to service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Reset Password",
                "operationId": "reset password",
                "responses": {
                    "200": {
                        "description": "Returns success",
                        "schema": {
                            "$ref": "#/definitions/controllers.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/user/register": {
            "post": {
                "description": "**Receives user payload, validate it then send it to service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Register"
                ],
                "summary": "Registers User",
                "operationId": "register user",
                "responses": {
                    "201": {
                        "description": "User registered",
                        "schema": {
                            "$ref": "#/definitions/controllers.APIResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid payload",
                        "schema": {
                            "$ref": "#/definitions/controllers.APIResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.APIResponse"
                        }
                    }
                }
            }
        },
        "/api/user/reset": {
            "post": {
                "description": "**Receives user payload, validate it then send it to service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Generate Password Reset Token",
                "operationId": "reset token",
                "responses": {
                    "200": {
                        "description": "Returns user",
                        "schema": {
                            "$ref": "#/definitions/controllers.APIUserResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/controllers.APIUserResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.APIResponse": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string"
                }
            }
        },
        "controllers.APIUserResponse": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/entities.User"
                }
            }
        },
        "entities.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isVender": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "password_inserted_at": {
                    "type": "string"
                },
                "password_reset_token": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}